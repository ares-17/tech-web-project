/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.2.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.unina.techweb.controller.api;

import com.unina.techweb.api.ApiUtil;
import com.unina.techweb.model.*;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.tags.Tag;
import jakarta.annotation.Generated;
import jakarta.validation.Valid;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.context.request.NativeWebRequest;

import java.util.List;
import java.util.Optional;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2024-05-20T16:04:02.451980250+02:00[Europe/Rome]")
@Validated
@Tag(name = "quiz", description = "the quiz API")
public interface QuizApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /quiz/complete : Consente di completare un quiz
     *
     * @param completeQuizDTO  (required)
     * @return Ok (status code 200)
     */
    @Operation(
        operationId = "completeQuiz",
        summary = "Consente di completare un quiz",
        tags = { "quiz" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Ok")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/quiz/complete",
        consumes = { "application/json" }
    )
    default ResponseEntity<Void> completeQuiz(
        @Parameter(name = "CompleteQuizDTO", description = "", required = true) @Valid @RequestBody CompleteQuizDTO completeQuizDTO
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /quiz : Crea un nuovo quiz
     *
     * @param quizQuestionsDTO I dettagli del quiz da creare (required)
     * @return Quiz creato con successo (status code 200)
     */
    @Operation(
        operationId = "createQuiz",
        summary = "Crea un nuovo quiz",
        tags = { "quiz" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Quiz creato con successo", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Quiz.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/quiz",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    default ResponseEntity<Quiz> createQuiz(
        @Parameter(name = "QuizQuestionsDTO", description = "I dettagli del quiz da creare", required = true) @Valid @RequestBody QuizQuestionsDTO quizQuestionsDTO
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"uid\" : \"uid\", \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\", \"isOpen\" : true, \"maxErrors\" : 3, \"createdBy\" : \"createdBy\", \"questions\" : [ \"questions\", \"questions\" ], \"description\" : \"Description of Quiz\", \"title\" : \"A beatiful Quiz\" }";
                    com.unina.techweb.api.ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /quiz/completed/{uidQuiz} : Restituisce tutti i giocatori (Customers e Users) che hanno partecipato al Quiz
     *
     * @param uidQuiz  (required)
     * @return Ok (status code 200)
     *         or Il server ha riscontrato un problema (status code 200)
     */
    @Operation(
        operationId = "getPlayersByQuiz",
        summary = "Restituisce tutti i giocatori (Customers e Users) che hanno partecipato al Quiz",
        tags = { "quiz" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Ok", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Question.class)),
                @Content(mediaType = "application/problem+json", schema = @Schema(implementation = Question.class))
            }),
            @ApiResponse(responseCode = "200", description = "Il server ha riscontrato un problema", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Problem.class)),
                @Content(mediaType = "application/problem+json", schema = @Schema(implementation = Problem.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/quiz/completed/{uidQuiz}",
        produces = { "application/json", "application/problem+json" }
    )
    default ResponseEntity<List<Question>> getPlayersByQuiz(
        @Parameter(name = "uidQuiz", description = "", required = true) @PathVariable("uidQuiz") String uidQuiz
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"isMultipleChoices\" : true, \"uidQuiz\" : \"uidQuiz\", \"title\" : \"title\" }";
                    com.unina.techweb.api.ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/problem+json"))) {
                    String exampleString = "Custom MIME type example not yet supported: application/problem+json";
                    com.unina.techweb.api.ApiUtil.setExampleResponse(request, "application/problem+json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /quiz/{uidQuiz} : Restituisce un quiz
     *
     * @param uidQuiz  (required)
     * @return Ok (status code 200)
     *         or Il server ha riscontrato un problema (status code 200)
     */
    @Operation(
        operationId = "getQuiz",
        summary = "Restituisce un quiz",
        tags = { "quiz" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Ok", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Quiz.class)),
                @Content(mediaType = "application/problem+json", schema = @Schema(implementation = Quiz.class))
            }),
            @ApiResponse(responseCode = "200", description = "Il server ha riscontrato un problema", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Problem.class)),
                @Content(mediaType = "application/problem+json", schema = @Schema(implementation = Problem.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/quiz/{uidQuiz}",
        produces = { "application/json", "application/problem+json" }
    )
    default ResponseEntity<Quiz> getQuiz(
        @Parameter(name = "uidQuiz", description = "", required = true) @PathVariable("uidQuiz") String uidQuiz
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"uid\" : \"uid\", \"createdAt\" : \"2000-01-23T04:56:07.000+00:00\", \"isOpen\" : true, \"maxErrors\" : 3, \"createdBy\" : \"createdBy\", \"questions\" : [ \"questions\", \"questions\" ], \"description\" : \"Description of Quiz\", \"title\" : \"A beatiful Quiz\" }";
                    com.unina.techweb.api.ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/problem+json"))) {
                    String exampleString = "Custom MIME type example not yet supported: application/problem+json";
                    ApiUtil.setExampleResponse(request, "application/problem+json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
